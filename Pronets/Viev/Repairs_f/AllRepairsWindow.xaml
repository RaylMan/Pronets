<Window x:Class="Pronets.Viev.Repairs_f.AllRepairsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pronets.Viev.Repairs_f"
        xmlns:vm="clr-namespace:Pronets.VievModel.Repairs_f"
        xmlns:model="clr-namespace:Pronets.Model"
        mc:Ignorable="d"
        Title="Список ремонтов" Height="450" Width="800" WindowStartupLocation="CenterScreen" Background="Gainsboro" Closed="Window_Closed">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <!--Row 0-->
        <!--Text="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
        <Label Content="Поиск по серийному номеру" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,7,0,0"/>
        <TextBox Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GotFocus="TbxSearch_GotFocus" SelectionChanged="TbxSearch_SelectionChanged"
                     ToolTip="Search" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="175,8,0,0" Width="251" Height="23"/>
        <Button Content="  Поиск  " Command="{Binding SearchCommand}" HorizontalAlignment="Left" Margin="431,8,0,4" Grid.Row="0" Grid.ColumnSpan="2"/>
        <Button Content="  Далее  " Command="{Binding SearchNextCommand}" HorizontalAlignment="Left" Margin="47,8,0,4" Grid.Row="0" Grid.Column="1"/>
        <CheckBox x:Name="checkBox" Content="Искать с русскими символами" IsChecked="{Binding IsChecked}" HorizontalAlignment="Left" Margin="108,13,0,0"
                  VerticalAlignment="Top" Width="194" Grid.Column="1"/>
        <!--Row 1-->
        <DataGrid x:Name="Docunents1" ItemsSource="{Binding V_Repairs}" SelectedIndex="{Binding SelectedIndex}" SelectedValue="{Binding SelectedItem}" 
                  FrozenColumnCount="3"  Grid.Row="1" Margin="5,5,5,24" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF999999"
                  VerticalGridLinesBrush="#FF999999" CanUserAddRows="False" CanUserDeleteRows="False" SelectionChanged="Docunents1_SelectionChanged" Grid.ColumnSpan="2">

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Редактировать" Click="OpenEditRepairWindow"/>
                    <MenuItem Header="Открыть документ" Click="BtnOpenDocument_Click" CommandParameter="{Binding SelectedIndex}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Готово">
                            <Setter Property="Background" Value="Lime"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Донор">
                            <Setter Property="Background" Value="Tomato"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Не смогли починить">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Восстановлению не подлежит">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Утеряно">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="В ремонте">
                            <Setter Property="Background" Value="#FFF9F14C"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Отправлено заказчику">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="№" Binding="{Binding RepairId}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Nomenclature}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Серийный Номер" Binding="{Binding Serial_Number}" MaxWidth="200" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Клиент" Binding="{Binding Client_Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="№ док." Binding="{Binding DocumentId}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Заявленная неисправность" Binding="{Binding Claimed_Malfunction}" MaxWidth="200" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Дата приема" Binding="{Binding Date_Of_Receipt, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата отправки" Binding="{Binding Departure_Date, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Получатель" Binding="{Binding Recipient}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Гарантия" Binding="{Binding Warranty}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Выявленная неисправность" Binding="{Binding Identifie_Fault}" MaxWidth="200" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Проделанный ремонт" Binding="{Binding Work_Done}" MaxWidth="200" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Категория ремонта" Binding="{Binding Repair_Category}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Инженер" Binding="{Binding Engineer}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата ремонта" Binding="{Binding Repair_Date, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Статус ремонта" Binding="{Binding Status}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Заметка" Binding="{Binding Note}" MaxWidth="200"  IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StatusBar Grid.Row="1" VerticalAlignment="Bottom" Grid.ColumnSpan="2">
            <TextBlock Text="{Binding LoadingStatus}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,1" />
        </StatusBar>
    </Grid>
</Window>
