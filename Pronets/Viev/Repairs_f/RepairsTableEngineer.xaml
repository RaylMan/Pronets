<Window x:Class="Pronets.Viev.Repairs_f.RepairsTableEngineer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pronets.Viev.Repairs_f"
        mc:Ignorable="d"
        Title="Таблица ремонта" Height="595" Width="1020" MinHeight="595" MinWidth="1020" WindowStartupLocation="CenterScreen" Background="Gainsboro">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--Column 0-->
        <DataGrid x:Name="serialsGrid" Grid.Column="0" ItemsSource="{Binding SerialNumbers}" Margin="5,5,5,76" CanUserAddRows="True" 
                  HorizontalGridLinesBrush="#FF999999" VerticalGridLinesBrush="#FF999999" AutoGenerateColumns="False" 
                  SelectedItem="{Binding SelectedSerialItem}"  SelectedIndex="{Binding SelectedSerialIndex}" CanUserDeleteRows="False"
                 >
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Удалить" Command="{Binding RemoveSerialCommand}" CommandParameter="{Binding SelectedSerialIndex}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns >
                <DataGridTextColumn Header="Серийный номер" Binding="{Binding Serial}" Width="*" CanUserSort="False"/>
            </DataGrid.Columns>
        </DataGrid>
        <TextBlock Text="{Binding SerialsCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Bottom" HorizontalAlignment="Left"  Margin="5,0,0,55"/>
        <CheckBox x:Name="cbxIsDocument" Content="Выборка по № документа" IsChecked="{Binding IsDocument}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,0,0,35"/>

        <Button x:Name="btnAddToTable" Content="  Добавить  " Grid.Column="0" Command="{Binding AddToTableCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Left"
                Margin="5,0,0,5" Height="25"/>
        <Button x:Name="btnClear" Content="  Очистить  " Grid.Column="0" Command="{Binding ClearCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Margin="0,0,5,5" Height="25"/>

        <!--Column 1-->
        <Menu Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right">
            <MenuItem Header="Данные">
                <MenuItem Header="Обновить данные страницы" Command="{Binding RefreshCommand}"></MenuItem>
            </MenuItem>
        </Menu>
        <Label Content="Статус ремонта" Grid.Column="1"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,60,0,0"/>
        <ComboBox  ItemsSource="{Binding Statuses, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" HorizontalAlignment="Left"
                   SelectedValue="{Binding SelectedStatus, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Grid.Column="1" Margin="5,81,0,0" Width="191"   >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Status}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <Label Content="Категория ремонта" Grid.Column="1"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="201,60,0,0" RenderTransformOrigin="0.537,0.526"/>
        <ComboBox x:Name="cbxCategories"  ItemsSource="{Binding Repair_Categories, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" HorizontalAlignment="Left"
                   SelectedValue="{Binding SelectedCategory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Grid.Column="1" Margin="201,81,0,0" Width="191"   >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Category}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <DataGrid x:Name="Docunents1" ItemsSource="{Binding V_Repairs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedValue="{Binding SelectedItem}" SelectedIndex="{Binding SelectedRepairIndex}"
                   Grid.Column="1" Margin="5,108,5,35" AutoGenerateColumns="False" SelectionMode="Single" HorizontalGridLinesBrush="#FF999999" 
                  VerticalGridLinesBrush="#FF999999"  CanUserAddRows="False" CanUserDeleteRows="False" >
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Удалить" Command="{Binding RemoveRepairCommand}" CommandParameter="{Binding SelectedRepairIndex}" />
                    <MenuItem Header="Удалить выбранные" Command="{Binding RemoveSelectedRepairCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Готово">
                            <Setter Property="Background" Value="Lime"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Донор">
                            <Setter Property="Background" Value="Tomato"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Не смогли починить">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Восстановлению не подлежит">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Утеряно">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="В ремонте">
                            <Setter Property="Background" Value="#FFF9F14C"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Отправлено заказчику">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <CheckBox x:Name="allChecked" Checked="AllChecked_Checked" Unchecked="AllChecked_Unchecked"  VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox x:Name="chkbx" IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="№" Binding="{Binding RepairId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True"/>
                <DataGridTextColumn Header="№ Док." Binding="{Binding DocumentId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Nomenclature, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Серийный Номер" Binding="{Binding Serial_Number, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Неисправность" Binding="{Binding Identifie_Fault, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxWidth="300">
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="MaxLength" Value="200"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Проделанный ремонт" Binding="{Binding Work_Done, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxWidth="300">
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="MaxLength" Value="200"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <TextBlock Text="{Binding RepairsCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="1"
                   VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5"/>
        <Button x:Name="btnCreate" Content="  Записать  " Grid.Column="1" Command="{Binding EditCommand}"
                VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,5,5" Height="25"/>
        <Label Content="Выявленная неисправность" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,-6,0,0" Grid.Column="1"/>
        <TextBox x:Name="tbxDefect" Text="{Binding IdentifieFault, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,16,0,0" Width="191" MaxLength="200" Height="44"
            TextWrapping="Wrap" Grid.Column="1"/>
        <Label Content="Проделанная работа" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="201,-6,0,0" Grid.Column="1"/>
        <TextBox x:Name="tbxWork" Text="{Binding WorkDone, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="201,16,0,0" Width="191" MaxLength="200" Height="44"
            TextWrapping="Wrap" Grid.Column="1"/>
        <Button x:Name="btnDefect" Click="BtnDefect_Click" Content=" Выбрать  " Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="397,16,0,0" Width="70" />
        <Button x:Name="btnFill" Command="{Binding FillCommand}" Content=" Заполнить " Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="397,40,0,0"  />
    </Grid>
</Window>
