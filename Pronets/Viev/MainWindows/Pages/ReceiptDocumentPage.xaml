<Page x:Class="Pronets.Viev.MainWindows.Pages.ReceiptDocumentPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Pronets.Viev.MainWindows.Pages"
      xmlns:window="clr-namespace:Pronets.Viev.Repairs_f"
      xmlns:vm="clr-namespace:Pronets.VievModel.MainWindows.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ReceiptDocumentPage">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <!--Row 0-->
        <Button x:Name="btnCreate" Click="BtnCreate_Click" CommandParameter="{x:Type window:NewReceiptDocument}"  Content=" Создать " Grid.Row="0" Grid.Column="0" Margin="5,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <Button x:Name="btnFillList" Command="{Binding SortCommand}" Content=" Обновить " Grid.Column="0" HorizontalAlignment="Left" Margin="62,10,0,0" VerticalAlignment="Top"/>
        <Label Content="Статус" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Margin="148,7,0,0"/>
        <ComboBox x:Name="cmbStatuses" ItemsSource="{Binding Statuses, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SelectedStatusItem}"  Grid.Column="0" Grid.Row="0"
                   HorizontalAlignment="Left" Margin="193,10,0,0" VerticalAlignment="Top" Width="169" SelectionChanged="CmbStatuses_SelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Status}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <CheckBox x:Name="cbxAllStatus" Content="Все статусы" IsChecked="{Binding AllStatuses}" Checked="CbxAllStatus_Checked"
                  VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="0" Margin="367,13,0,0"/>


        <Label Content="Клиент" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Margin="484,7,0,0"/>
        <ComboBox x:Name="cmbClients" ItemsSource="{Binding Clients, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding SelectedClientItem}"
                  HorizontalAlignment="Left" Margin="532,10,0,8" Grid.Row="0" VerticalAlignment="Center" Width="169" SelectionChanged="CmbClients_SelectionChanged"
                      IsTextSearchEnabled="True" TextSearch.TextPath="ClientName" IsEditable="True" DisplayMemberPath="ClientName" />
        <CheckBox x:Name="cbxAllClients" Content="Все Киленты" IsChecked="{Binding AllClients}" Checked="CbxAllClients_Checked"
                  VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="0" Margin="706,13,0,0"/>
        <Menu Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right">
            <MenuItem Header="Данные" Click="MenuItem_Click">
                <MenuItem Header="Обновить данные страницы (F5)" Command="{Binding RefreshCommand}"></MenuItem>
            </MenuItem>
        </Menu>
        <!--Row 1-->
        <DataGrid x:Name="docunents" ItemsSource="{Binding Path=ReceiptDocuments}" SelectedIndex="{Binding SelectedIndex}" 
                  SelectedValue="{Binding SelectedItem}" Margin="5" Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False"
                  Grid.ColumnSpan="2" SelectionMode="Single"  HorizontalGridLinesBrush="#FF999999" VerticalGridLinesBrush="#FF999999"
                  CanUserAddRows="False" CanUserDeleteRows="False">
            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="Row_DoubleClick"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Готово">
                            <Setter Property="Background" Value="Lime"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Донор">
                            <Setter Property="Background" Value="Tomato"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Не смогли починить">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Восстановлению не подлежит">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Утеряно">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Частично Готовоый">
                            <Setter Property="Background" Value="#FFFFF300"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="В ремонте">
                            <Setter Property="Background" Value="#FF4061F9"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Отправлено заказчику">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Удалить" Command="{Binding RemoveCommand}" CommandParameter="{Binding SelectedIndex}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="№" Binding="{Binding Path=Document_Id}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Клиент" Binding="{Binding Path=Client}" IsReadOnly="True" />
                <DataGridTextColumn Header="Приемщик" Binding="{Binding Path=Inspector}" IsReadOnly="True" />
                <DataGridTextColumn Header="Дата" Binding="{Binding Path=Date, StringFormat='dd.MM.yyyy'}" IsReadOnly="True" />
                <DataGridTextColumn Header="Статус" Binding="{Binding Path=Status}" IsReadOnly="True" />
                <DataGridTextColumn Header="Дата отправки" Binding="{Binding Path=DepartureDate, StringFormat='dd.MM.yyyy'}" IsReadOnly="True" />
                <DataGridTextColumn Header="Кол-во оборудования" Binding="{Binding Path=Count}" IsReadOnly="True" />
                <DataGridTextColumn Header="Заметки" Binding="{Binding Path=Note}"  IsReadOnly="True" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBox.MaxLength" Value="200"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>

