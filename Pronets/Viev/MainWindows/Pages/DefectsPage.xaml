<Page x:Class="Pronets.Viev.MainWindows.Pages.DefectsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Pronets.Viev.MainWindows.Pages"
      xmlns:vm="clr-namespace:Pronets.VievModel.MainWindows.Pages"
      xmlns:image="clr-namespace:Pronets.Viev.Nomenclature_f"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DefectsPage">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--Column 0-->
        <DataGrid x:Name="serialsGrid" Grid.Column="0" ItemsSource="{Binding SerialNumbers}" Margin="5,5,5,55" CanUserAddRows="True" HorizontalGridLinesBrush="#FF999999"
                  VerticalGridLinesBrush="#FF999999" AutoGenerateColumns="False" SelectedItem="{Binding SelectedSerialItem}" SelectedIndex="{Binding SelectedSerialIndex}"
                  CanUserDeleteRows="False">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Удалить" Command="{Binding RemoveSerialCommand}" CommandParameter="{Binding SelectedSerialIndex}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Серийный номер" Binding="{Binding Serial}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
        <CheckBox x:Name="cbxIsDocument" Content="Выборка по № документа" IsChecked="{Binding IsDocument}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,0,0,35"/>
        <Button x:Name="btnAddToTable" Content="  Добавить  " Grid.Column="0" Command="{Binding AddToTableCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Left"
                Margin="5,0,0,5" Height="25"/>
        <Button x:Name="btnClear" Content="  Очистить  " Grid.Column="0" Command="{Binding ClearCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Margin="0,0,5,5" Height="25"/>
        
        <!--Column 1-->
        <DataGrid x:Name="Docunents1" ItemsSource="{Binding V_Repairs}" SelectedValue="{Binding SelectedItem}" SelectedIndex="{Binding SelectedRepairIndex}"
                   Grid.Column="1" Margin="5,38,5,10" AutoGenerateColumns="False" SelectionMode="Single" HorizontalGridLinesBrush="#FF999999" 
                  VerticalGridLinesBrush="#FF999999"  CanUserAddRows="False" CanUserDeleteRows="False" >
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Удалить" Command="{Binding RemoveRepairCommand}" CommandParameter="{Binding SelectedRepairIndex}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Готово">
                            <Setter Property="Background" Value="Lime"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Донор">
                            <Setter Property="Background" Value="Tomato"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Не смогли починить">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Утеряно">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="В ремонте">
                            <Setter Property="Background" Value="#FFF9F14C"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Отправлено заказчику">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="№" Binding="{Binding RepairId}" IsReadOnly="True"/>
                <DataGridTextColumn Header="№ Док." Binding="{Binding DocumentId}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Nomenclature}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Серийный Номер" Binding="{Binding Serial_Number}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Клиент" Binding="{Binding Client_Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата приема" Binding="{Binding Date_Of_Receipt, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Гарантия" Binding="{Binding Warranty}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата ремонта" Binding="{Binding Repair_Date, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Статус ремонта" Binding="{Binding Status}" Width="*" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="btnCreate" Content="  Сформировать  " Grid.Column="1"  Click="BtnCreate_Click"
                VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,5,5,0" Height="25"/>
        <Label Content="Клиент" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Margin="0,4,0,0"/>
        <ComboBox x:Name="cbxClient" ItemsSource="{Binding Clients, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding SelectedClientItem}"
                  HorizontalAlignment="Left"  Grid.Column="1" VerticalAlignment="Top" Width="155" Height="25" Margin="48,5,0,0"
                   IsTextSearchEnabled="True" TextSearch.TextPath="ClientName" IsEditable="True" DisplayMemberPath="ClientName"/>
        <Button  Content="  Обновить  " Command="{Binding RefreshCommand}" HorizontalAlignment="Left" Background="White" Grid.Column="1" VerticalAlignment="Top" Margin="209,5,0,0" Height="25"  />
    </Grid>
</Page>