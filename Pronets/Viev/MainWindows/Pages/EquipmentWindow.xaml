<Page x:Class="Pronets.Viev.MainWindows.Pages.EquipmentWindow"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:vm="clr-namespace:Pronets.VievModel.MainWindows.Pages"
      xmlns:local="clr-namespace:Pronets.Viev.MainWindows.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Оборудование">
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <!--Row 0-->
            <Button x:Name="button" Content="  Обновить  " Command="{Binding RefreshCommand, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0" HorizontalAlignment="Left" Margin="5,10,0,0" VerticalAlignment="Top" Width="74" RenderTransformOrigin="0.518,0.167"/>
            <ListBox x:Name="statuses" ItemsSource="{Binding Statuses, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0" HorizontalAlignment="Left" Margin="5,35,0,1"  Width="235" IsTabStop="False"  >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Height="auto">
                            <CheckBox Content="{Binding Status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <!--Row 1-->
            <Label Content="Поиск" Margin="2,0,0,2" Grid.Row="1"/>
            <TextBox TextWrapping="Wrap" Text="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="TextBox_SelectionChanged" GotFocus="TextBox_GotFocus"
                     ToolTip="Search" HorizontalAlignment="Right" VerticalAlignment="Top" Width="194"  Grid.Row="1" Margin="0,5,0,0"/>
            <DataGrid ItemsSource="{Binding SortingEquipments, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedSortingEquipent}"
                  AutoGenerateColumns="False" IsReadOnly="True" Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False" 
                   SelectionMode="Single"  HorizontalGridLinesBrush="#FF999999" VerticalGridLinesBrush="#FF999999"  Grid.Row="1" Margin="5,28,0,20" >
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Номенклатура" Binding="{Binding Path=NomenclatureName, UpdateSourceTrigger=PropertyChanged}" Width="*" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Количество" Binding="{Binding Path=RepairsCount, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Text="{Binding TotalAmount, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,0,0,4"/>

        </Grid>

        <!--Column 2-->
        <DataGrid ItemsSource="{Binding RepairsByNomenclature, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  AutoGenerateColumns="False" IsReadOnly="True" Grid.Column="1" CanUserAddRows="False" CanUserDeleteRows="False"
                   SelectionMode="Single"  HorizontalGridLinesBrush="#FF999999" VerticalGridLinesBrush="#FF999999" Margin="5,5,5,20">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Готово">
                            <Setter Property="Background" Value="Lime"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Донор">
                            <Setter Property="Background" Value="Tomato"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Не смогли починить">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Восстановлению не подлежит">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Утеряно">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="В ремонте">
                            <Setter Property="Background" Value="#FFF9F14C"/> 	

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Отправлено заказчику">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="№" Binding="{Binding Path=RepairId, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="название" Binding="{Binding Path=Nomenclature, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Серийный номер" Binding="{Binding Path=Serial_Number, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата приема" Binding="{Binding Path=Date_Of_Receipt, UpdateSourceTrigger=PropertyChanged, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата ремонта" Binding="{Binding Path=Repair_Date, UpdateSourceTrigger=PropertyChanged, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Статус" Binding="{Binding Path=Status, UpdateSourceTrigger=PropertyChanged, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Получатель" Binding="{Binding Recipient}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата отправки" Binding="{Binding Departure_Date, StringFormat='dd.MM.yyyy'}" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>