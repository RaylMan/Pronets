<Page x:Class="Pronets.Viev.MainWindows.Pages.RepairsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Pronets.Viev.MainWindows.Pages"
      xmlns:vm="clr-namespace:Pronets.VievModel.MainWindows.Pages"
      xmlns:text="clr-namespace:Pronets.Model"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="RepairsPage">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition MinHeight="200" MaxHeight="400"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--Row 0-->
        <TextBox x:Name="tbxSearch" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" HorizontalAlignment="Left" 
                 Width="170" SelectionChanged="TbxSearch_SelectionChanged" GotFocus="TbxSearch_GotFocus" MaxLength="50" Margin="5,5,54,5">
            <TextBox.InputBindings>
                <KeyBinding 
            Key="Enter"
            Command="{Binding SearchCommand}"
            CommandParameter="{Binding Path=SearchText, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
            </TextBox.InputBindings>
        </TextBox>
        <Button x:Name="btnSearch" Content="Искать" Command="{Binding SearchCommand}"  CommandParameter="{Binding ElementName=tbxSearch}" Grid.Row="0"
                HorizontalAlignment="Left"  Margin="180,5,0,5" RenderTransformOrigin="-1.503,0.609" Click="BtnSearch_Click" />
        <CheckBox x:Name="checkBox" Content="Искать с русскими символами" IsChecked="{Binding IsChecked}" HorizontalAlignment="Left" Margin="243,10,0,0"
                  VerticalAlignment="Top" Grid.ColumnSpan="2" Width="194"/>
        <Menu Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right">
            <MenuItem Header="Данные">
                <MenuItem Header="Обновить данные страницы" Command="{Binding RefreshCommand}"></MenuItem>
            </MenuItem>
        </Menu>
        <!--Row 1-->
        <DataGrid x:Name="Docunents" ItemsSource="{Binding V_Repairs, UpdateSourceTrigger=PropertyChanged}"  SelectedItem="{Binding SelectedRepair, UpdateSourceTrigger=PropertyChanged}" 
                  Grid.Row="1" Grid.ColumnSpan="2" Margin="5,5,5,10" AutoGenerateColumns="False" SelectionMode="Single" HorizontalGridLinesBrush="#FF999999" 
                  VerticalGridLinesBrush="#FF999999" CanUserAddRows="False" CanUserDeleteRows="False" SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Информация о ремонте" Command="{Binding GetInfoCommand}" CommandParameter="{Binding SelectedRepair}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Готово">
                            <Setter Property="Background" Value="Lime"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Донор">
                            <Setter Property="Background" Value="Tomato"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Не смогли починить">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Восстановлению не подлежит">
                            <Setter Property="Background" Value="Tomato"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Утеряно">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="В ремонте">
                            <Setter Property="Background" Value="#FFF9F14C"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Отправлено заказчику">
                            <Setter Property="Background" Value="DarkGray"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="№" Binding="{Binding Path=RepairId, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="№ документа" Binding="{Binding Path=DocumentId, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Path=Nomenclature, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True"/>
                <DataGridTextColumn Header="Серийный Номер" Binding="{Binding Path=Serial_Number, UpdateSourceTrigger=PropertyChanged}" Width="*" IsReadOnly="True"/>
                <DataGridTextColumn Header="Дата приема" Binding="{Binding Path=Date_Of_Receipt, StringFormat='dd.MM.yyyy', UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Гарантия" Binding="{Binding Path=Warranty, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Статус ремонта" Binding="{Binding Path=Status, UpdateSourceTrigger=PropertyChanged}" Width="*" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>

        <!--Row 2-->
        <Grid Grid.Row="2" Background="Gainsboro" Margin="5">
            <TextBox Text="{Binding RepairsInfo}" IsReadOnly="True" TextWrapping="Wrap" FontSize="14" VerticalScrollBarVisibility="Visible"/>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="1" Margin="0,5,5,5" Background="Gainsboro">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="165"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="26"></RowDefinition>
                <RowDefinition Height="26"></RowDefinition>
                <RowDefinition Height="26"></RowDefinition>
                <RowDefinition Height="40"></RowDefinition>
            </Grid.RowDefinitions>
            <Label Content="Выявленная неисправность:" Grid.Column="0" Grid.Row="0"/>
            <Label Content="Проделанный ремонт:" Grid.Column="0" Grid.Row="1"/>
            <Label  Content="Заметка:"  Grid.Column="0" Grid.Row="2"/>
            <Label Content="Дата ремонта:"  Grid.Column="0" Grid.Row="3"/>
            <Label Content="Категория ремонта:"  Grid.Column="0" Grid.Row="4"/>
            <Label  Content="Статус ремонта:"  Grid.Column="0" Grid.Row="5"/>
            <!--<Button x:Name="btnOpenDefects" Grid.Column="1" Grid.Row="0" Content=" + " HorizontalAlignment="Right" Click="BtnOpenDefects_Click"/>-->
            <TextBox x:Name="tbxDefect" Grid.Column="1" Grid.Row="0"  Text="{Binding Identifie_Fault, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      TextWrapping="Wrap" AcceptsReturn="True" MaxLength="200"/>
            <TextBox x:Name="tbxWork" Grid.Column="1" Grid.Row="1" Text="{Binding Work_Done, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                     TextWrapping="Wrap" AcceptsReturn="True" MaxLength="200"/>
            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" MaxLength="200"/>
            <DatePicker Grid.Column="1" Grid.Row="3" SelectedDate="{Binding Path=Repair_Date, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                  ValidatesOnExceptions=true, NotifyOnValidationError=true}"/>
            <ComboBox  ItemsSource="{Binding Repair_Categories}" SelectedValue="{Binding SelectedCategory}"  Grid.Column="1" Grid.Row="4" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Category}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox  ItemsSource="{Binding Statuses, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SelectedStatus}"  Grid.Column="1" Grid.Row="5"  >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Status}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Column="1" Grid.Row="6" Command="{Binding EditCommand}" HorizontalAlignment="Right" Margin="5" Content="Записать" Width="85"/>
        </Grid>
    </Grid>

</Page>
